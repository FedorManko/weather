server:
  port: ${SERVER_PORT:8081}

spring:
  application:
    name: weather
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/Weather
          jwk-set-uri: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

  jpa:
    show-sql: true

  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
    username: sa
    password: sa
  liquibase:
    change-log: classpath:db/changelog/db.changelog-test.yaml
jwt:
  auth:
    converter:
      resource-id: weather-rest-api
      principle-attribute: preferred_username

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  info:
    env:
      enabled: true

info:
  app:
    name: deposit-service
    description: This is deposit-service application

springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    groups-order: DESC
    path: /swagger-ui.html
    operationsSorter: method
  default-consumes-media-type: 'application/json'
  default-produces-media-type: 'application/json'

logging:
  pattern:
    console: "%clr(%d{dd:yy:MM:HH:mm}){faint}%clr(${LOG_LEVEL_PATTERN:-%-5p}) %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
  level:
    root: info
    com.andersen.weather.service: debug
