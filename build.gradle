plugins {
    id 'java'
    id 'org.springframework.boot' version "$spring_boot_version"
    id 'io.spring.dependency-management' version "$spring_dependency_management_version"
    id 'jacoco'
    id 'checkstyle'
    id 'war'
}

group = 'com.andersen'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$spring_doc_version"
    implementation "org.postgresql:postgresql:$postgresql_version"
    implementation "org.mapstruct:mapstruct:$mapstruct_version"
    implementation "org.liquibase:liquibase-core:$liquibase_version"
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstruct_version"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:$mapstruct_version"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2:2.1.214'
}

jacoco {
    toolVersion = "$jacoco_version"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
    }
}

checkstyle {
    toolVersion = "$checkstyle_version"
    configFile = file("${rootProject.projectDir}/checkstyle/checkstyle.xml")
    ignoreFailures = false
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = false
        html.required = true
    }
}
tasks.named('test') {
    useJUnitPlatform()
}
